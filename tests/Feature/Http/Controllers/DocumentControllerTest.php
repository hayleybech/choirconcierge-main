<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\DocumentController
 */
class DocumentControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $folder = \App\Models\Folder::factory()->create();
        $document = \App\Models\Document::factory()->create();

        $response = $this->delete(route('folders.documents.destroy', [$folder, $document]));

        $response->assertRedirect(back());
        $this->assertDeleted($folders);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $folder = \App\Models\Folder::factory()->create();
        $document = \App\Models\Document::factory()->create();

        $response = $this->get(route('folders.documents.show', [$folder, $document]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $folder = \App\Models\Folder::factory()->create();

        $response = $this->post(route('folders.documents.store', [$folder]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    // test cases...
}
