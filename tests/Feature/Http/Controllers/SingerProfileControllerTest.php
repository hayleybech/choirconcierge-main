<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\SingerProfileController
 */
class SingerProfileControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $singer = \App\Models\Singer::factory()->create();

        $response = $this->get(route('singers.profiles.create', [$singer]));

        $response->assertOk();
        $response->assertViewIs('singers.createprofile');
        $response->assertViewHas('singer');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $singer = \App\Models\Singer::factory()->create();
        $profile = \App\Models\Profile::factory()->create();

        $response = $this->get(route('singers.profiles.edit', [$singer, $profile]));

        $response->assertOk();
        $response->assertViewIs('singers.editprofile');
        $response->assertViewHas('singer');
        $response->assertViewHas('profile');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $singer = \App\Models\Singer::factory()->create();

        $response = $this->post(route('singers.profiles.store', [$singer]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('singers.show', $singer));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $singer = \App\Models\Singer::factory()->create();
        $profile = \App\Models\Profile::factory()->create();

        $response = $this->put(route('singers.profiles.update', [$singer, $profile]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('singers.show', $singer));

        // TODO: perform additional assertions
    }

    // test cases...
}
