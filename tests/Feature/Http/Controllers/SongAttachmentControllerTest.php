<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\SongAttachmentController
 */
class SongAttachmentControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $song = \App\Models\Song::factory()->create();
        $songAttachment = \App\Models\SongAttachment::factory()->create();

        $response = $this->delete(route('songs.attachments.destroy', [$song, 'attachment' => $songAttachment->attachment]));

        $response->assertRedirect(route('songs.show', [$song]));
        $this->assertDeleted($songs);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $song = \App\Models\Song::factory()->create();
        $songAttachment = \App\Models\SongAttachment::factory()->create();

        $response = $this->get(route('songs.attachments.show', [$song, 'attachment' => $songAttachment->attachment]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $song = \App\Models\Song::factory()->create();

        $response = $this->post(route('songs.attachments.store', [$song]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('songs.show', [$song]));

        // TODO: perform additional assertions
    }

    // test cases...
}
