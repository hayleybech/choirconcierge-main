<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\UserController
 */
class UserControllerTest extends TestCase
{
    /**
     * @test
     */
    public function add_roles_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = \App\Models\User::factory()->create();

        $response = $this->post(route('users.addroles', [$user]), [
            // TODO: send request data
        ]);

        $response->assertRedirect('/users');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function detach_role_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = \App\Models\User::factory()->create();
        $role = \App\Models\Role::factory()->create();

        $response = $this->get(route('users.detachrole', [$user, $role]));

        $response->assertRedirect('/users');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function find_roles_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('users/roles/find');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function find_singer_categories_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('users/singer-categories/find');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function find_users_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('users/find');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function find_voice_parts_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('users/voice-parts/find');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.index'));

        $response->assertOk();
        $response->assertViewIs('users.index');
        $response->assertViewHas('users');
        $response->assertViewHas('roles_all');

        // TODO: perform additional assertions
    }

    // test cases...
}
