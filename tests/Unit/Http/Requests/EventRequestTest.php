<?php

namespace Tests\Unit\Http\Requests;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Requests\EventRequest
 */
class EventRequestTest extends TestCase
{
    /** @var \App\Http\Requests\EventRequest */
    private $subject;

    protected function setUp(): void
    {
        parent::setUp();

        $this->subject = new \App\Http\Requests\EventRequest();
    }

    /**
     * @test
     */
    public function authorize()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->authorize();

        $this->assertTrue($actual);
    }

    /**
     * @test
     */
    public function rules()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->rules();

        $this->assertValidationRules([
            'title' => 'required|max:255',
            'type' => 'required|exists:event_types,id',
            'call_time' => 'required|date_format:Y-m-d H:i:s|before:start_date',
            'start_date' => 'required|date_format:Y-m-d H:i:s',
            'end_date' => 'required|date_format:Y-m-d H:i:s|after:start_date',
            'location_place_id' => 'nullable',
            'location_icon' => 'nullable',
            'location_name' => 'nullable',
            'location_address' => 'nullable',
            'description' => 'nullable|max:5000',
            'is_repeating' => 'boolean',
            'repeat_frequency_unit' => 'exclude_unless:is_repeating,true|required',
            'repeat_until' => 'exclude_unless:is_repeating,true|required|date_format:Y-m-d H:i:s|after:start_date',
            'send_notification' => 'boolean',
        ], $actual);
    }

    // test cases...
}
