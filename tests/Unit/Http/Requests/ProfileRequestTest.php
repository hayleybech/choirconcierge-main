<?php

namespace Tests\Unit\Http\Requests;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Requests\ProfileRequest
 */
class ProfileRequestTest extends TestCase
{
    /** @var \App\Http\Requests\ProfileRequest */
    private $subject;

    protected function setUp(): void
    {
        parent::setUp();

        $this->subject = new \App\Http\Requests\ProfileRequest();
    }

    /**
     * @test
     */
    public function authorize()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->authorize();

        $this->assertTrue($actual);
    }

    /**
     * @test
     */
    public function rules()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->rules();

        $this->assertValidationRules([
            'dob' => 'date|before:today',
            'phone' => 'max:255',
            'ice_name' => 'max:255',
            'ice_phone' => 'max:255',
            'address_street_1' => 'max:255',
            'address_street_2' => 'max:255',
            'address_suburb' => 'max:255',
            'address_state' => 'max:3',
            'address_postcode' => 'max:4',
            'reason_for_joining' => 'max:255',
            'referrer' => 'max:255',
            'profession' => 'max:255',
            'skills' => 'max:255',
            'height' => 'nullable|numeric|between:0,300',
            'membership_details' => 'max:255',
        ], $actual);
    }

    // test cases...
}
